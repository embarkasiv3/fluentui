@import '~@fluentui/common-styles/dist/sass/focusBorder';

:root {
  /* divider variables */
  --button-dividerColor: rgba(0, 0, 0, 0.1);
  --button-dividerLength: var(--button-minHeight);
  --button-dividerThickness: var(--button-borderWidth);

  --accent-dividerColor: var(--button-dividerColor);
}

.root {
  --button-contentGap: 0;
  --button-padding: 0;

  --button-dividerLength: var(--button-minHeight);

  width: auto;

  &._circular {
    > .button {
      border-top-left-radius: var(--button-borderRadius);
      border-bottom-left-radius: var(--button-borderRadius);
    }

    > .menuButton {
      border-top-right-radius: var(--button-borderRadius);
      border-bottom-right-radius: var(--button-borderRadius);
    }
  }

  &._fluid {
    > .button {
      flex-grow: 1;
      justify-content: flex-end;
    }
  }

  &._iconOnly {
    > .button {
      --button-padding: 0;
      --button-width: var(--button-height, var(--button-minHeight));

      align-items: center;
      display: inline-flex;
      justify-content: center;
      width: var(--button-width);
    }
  }

  &._primary {
    > .divider {
      --button-dividerColor: var(--accent-dividerColor);
    }
  }
}

.button,
.menuButton {
  align-items: center;
  background: inherit;
  border: none;
  box-shadow: none;
  color: inherit;
  cursor: pointer;
  display: flex;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  height: var(--button-height);
  justify-content: center;
  min-height: var(--button-minHeight);

  @include focus-border($thickness: 0);
}

.button {
  --button-contentGap: 10px;
  --button-padding: 0 16px;

  padding: var(--button-padding);
}

.menuButton {
  --button-padding: 0;
  --button-width: var(--button-height, var(--button-minHeight));

  width: var(--button-width);
}

.divider {
  border-left: var(--button-dividerThickness) solid var(--button-dividerColor);
  height: var(--button-dividerLength);
  width: 0px;
}

/* selectors */

.root:hover {
  background: var(--button-background);
  color: var(--button-contentColor);
  border-color: var(--button-borderColor);
  box-shadow: var(--button-boxShadow);

  .icon {
    color: var(--button-hovered-contentColor);
  }
}

.root:active {
  background: var(--button-background);
  color: var(--button-contentColor);
  border-color: var(--button-borderColor);
  box-shadow: var(--button-boxShadow);

  transform: var(--button-pressed-transform);
  transition: var(--button-pressed-transition);

  .icon {
    color: var(--button-contentColor);
  }
}

.button:hover,
.menuButton:hover {
  background: var(--button-hovered-background, var(--button-background));
  color: var(--button-hovered-contentColor, var(--button-contentColor));
  border-color: var(--button-hovered-borderColor, var(--button-borderColor));
  box-shadow: var(--button-hovered-boxShadow, var(--button-boxShadow));

  .icon {
    color: var(--button-hovered-iconColor, var(--button-hovered-contentColor));
  }
}

.button:active,
.menuButton:active {
  background: var(--button-pressed-background, var(--button-hovered-background));
  color: var(--button-pressed-contentColor, var(--button-hovered-contentColor, var(--button-contentColor)));
  border-color: var(--button-pressed-borderColor, var(--button-hovered-borderColor, var(--button-borderColor)));
  box-shadow: var(--button-pressed-boxShadow, var(--button-hovered-boxShadow, var(--button-boxShadow)));

  .icon {
    color: var(--button-pressed-iconColor, var(--button-pressed-contentColor));
  }
}
