@import '../../styles/variables';
@import '../../styles/mixins';

$PageSubHeadMargin: 20px;

.Page {
  position: relative;
  min-height: 100vh;
}

.sectionWrapper {
  max-width: $content-width + ($App-padding-sm * 2);
}

.section {
  background: $ms-color-white;
  padding: $App-padding-sm;
  margin-bottom: $App-padding-sm;
  @include ms-border-radius(2px);
  @include ms-depth-4;
  position: relative;
  opacity: 0;
  transform: translate3d(0, 48px, 0);
  transition: transform $ms-motion-duration-3 $ms-motion-timing-decelerate, opacity $ms-motion-duration-3 $ms-motion-timing-decelerate 0.05s;

  &:last-child {
    margin-bottom: 0;
  }

  ul.uListFlex {
    display: flex;
    flex-wrap: wrap;
    @include ms-padding-left(0);
    @include ms-margin-right(-$App-padding-sm);
    margin-bottom: -12px;

    li {
      list-style: none;
      @include ms-margin-right($App-padding-sm);
      margin-bottom: 12px;
    }

    > .uThird {
      flex-basis: calc(33% - #{$App-padding-sm});
    }
  }

  // Style markdown table wrappers.
  :global(.ms-mdTable-wrapper) {
    width: 100%;
    overflow-x: auto;
    margin-bottom: 20px;

    // Layer backgrounds so tables that scroll have shadows when the content overflows.
    background: linear-gradient(to right, $ms-color-white, rgba($ms-color-white, 0)) left / 48px 100% local,
      linear-gradient(to left, $ms-color-white, rgba($ms-color-white, 0)) right / 48px 100% local,
      linear-gradient(to right, $ms-color-neutralLight, rgba($ms-color-neutralLight, 0)) left / 12px 100% scroll,
      linear-gradient(to left, $ms-color-neutralLight, rgba($ms-color-neutralLight, 0)) right / 12px 100% scroll;
    background-repeat: no-repeat;
  }

  :global(.ms-mdImage img) {
    max-width: 100%;
    margin: 8px 0;
  }
}

.isMountedOffset {
  .section {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}

.content {
  p,
  ol,
  ul {
    font-size: 16px; // @TODO replace with fluent variable
  }

  p {
    margin-bottom: 12px;

    &:last-child {
      margin-bottom: 0;
    }
  }

  ol,
  ul {
    @include ms-padding-left(20px);
  }

  ul {
    li {
      list-style: disc;

      ul {
        padding-top: 8px;

        li {
          list-style-type: circle;
        }
      }
    }
  }

  li {
    margin-bottom: 8px;
  }
}

.edit {
  opacity: 0;
  transition: opacity 0.2s ease;

  &:hover,
  &:focus,
  &:focus-within {
    opacity: 1;
  }

  a:global(.ms-Button) {
    height: 20px;
  }
}

.subSection {
  margin-bottom: 36px;

  &:last-child {
    margin-bottom: 0;
  }
}

.sectionHeader {
  margin-bottom: $PageSubHeadMargin;
  display: flex;
  justify-content: space-between;
  align-items: center;

  &:hover {
    .edit {
      opacity: 1;
    }
  }
}

.subHeading,
.smallSubHeading {
  // color: $ms-color-neutralPrimary;
  @include ms-fontColor-gray160;
  @include ms-fontWeight-semibold;
  // font-weight: $ms-fontWeight-semibold;
  line-height: 1;
  margin-top: 0;
  margin-bottom: 0;
}

.subHeading {
  // font-size: 24px; // @TODO replace with fluent variable
  @include ms-fontSize-24;
}

.smallSubHeading {
  // font-size: 20px; // @TODO replace with fluent variable
  @include ms-fontSize-20;
}

.main {
  display: flex;
  flex-direction: column;
  position: relative;
}

.sideRailWrapper {
  margin-top: $App-padding-md;
}

// Disable scrollable area at smaller screen sizes.
.sideRailScrollbarsView {
  position: relative !important; // scrollbars sets position via style prop.
  overflow: auto !important; // scrollbars sets overflow via style prop.
}

@media only screen and (min-width: $uhf-screen-min-lg) {
  .main {
    display: flex;
    flex-direction: row;
  }

  .sectionWrapper {
    flex: 1 auto;
    max-width: $content-width + ($App-padding-sm * 2);
    padding-bottom: $contentPaddingBottom;
  }

  .showSideRail {
    max-width: calc(100% - #{$SideRail-width});
  }

  .sideRailWrapper {
    margin-top: 0;
    @include ms-padding-left($SideRail-padding-left);
    width: $SideRail-width;
  }

  .sideRailScrollbarsView {
    position: absolute !important;
    overflow: scroll !important;
  }

  @supports (position: sticky) {
    .sideRailWrapper {
      position: sticky;
      height: calc(100vh - #{$App-padding-lg});
      top: $App-padding-lg;
    }
  }
}

// Global styles intended to target classes defined in markdown files.
:global {
  ul.md-list--flex {
    display: flex;
    flex-wrap: wrap;
    @include ms-padding-left(0);
    @include ms-margin-right(-$App-padding-sm);
    margin-bottom: -12px;

    li {
      list-style: none;
      @include ms-margin-right($App-padding-sm);
      margin-bottom: 12px;
    }

    > .mdut--full {
      flex-basis: 100%;
      @include ms-margin-right(0);
    }

    > .mdut--half {
      flex-basis: calc(50% - #{$App-padding-sm});
    }
  }
}
