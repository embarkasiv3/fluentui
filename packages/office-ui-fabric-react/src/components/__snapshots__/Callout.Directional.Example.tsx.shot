// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Examples renders Callout.Directional.Example.tsx correctly 1`] = `
<div
  className="ms-CalloutExample"
>
  <div
    className="ms-CalloutExample-configArea"
  >
    <button
      aria-checked={true}
      aria-describedby={undefined}
      aria-disabled={undefined}
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-posinset={undefined}
      aria-setsize={undefined}
      checked={true}
      className="ms-Checkbox is-checked is-enabled root-183"
      data-ktp-execute-target={undefined}
      disabled={undefined}
      id="checkbox-0"
      name={undefined}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      role="checkbox"
      type="button"
    >
      <label
        className="ms-Checkbox-label label-184"
        htmlFor="checkbox-0"
      >
        <div
          className="ms-Checkbox-checkbox checkbox-185"
          data-ktp-target={undefined}
        >
          <i
            aria-hidden={true}
            className="ms-Checkbox-checkmark checkmark-188"
            data-icon-name="CheckMark"
            role="presentation"
          >
            
          </i>
        </div>
        <span
          className="ms-Checkbox-text text-187"
        >
          Show beak
        </span>
      </label>
    </button>
    <div
      className="ms-Slider ms-Slider-enabled undefined ms-Slider-row undefined"
    >
      <label
        className="ms-Label root-89"
        htmlFor="Slider1"
      >
        Gap Space
      </label>
      <div
        className="ms-Slider-container"
      >
        <button
          aria-label="Gap Space"
          aria-valuemax={30}
          aria-valuemin={0}
          aria-valuenow={0}
          aria-valuetext={undefined}
          className="ms-Slider-slideBox ms-Slider-showValue ms-Slider-showTransitions undefined"
          disabled={false}
          id="Slider1"
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchStart={[Function]}
          role="slider"
          type="button"
        >
          <div
            className="ms-Slider-line"
          >
            <span
              className="ms-Slider-thumb"
              style={
                Object {
                  "left": "0%",
                }
              }
            />
            <span
              className="ms-Slider-active"
              style={
                Object {
                  "width": "0%",
                }
              }
            />
            <span
              className="ms-Slider-inactive"
              style={
                Object {
                  "width": "100%",
                }
              }
            />
          </div>
        </button>
        <label
          className="ms-Label ms-Slider-value root-89"
        >
          0
        </label>
      </div>
    </div>
    <div
      className="ms-Slider ms-Slider-enabled undefined ms-Slider-row undefined"
    >
      <label
        className="ms-Label root-89"
        htmlFor="Slider2"
      >
        Beak Width
      </label>
      <div
        className="ms-Slider-container"
      >
        <button
          aria-label="Beak Width"
          aria-valuemax={50}
          aria-valuemin={10}
          aria-valuenow={16}
          aria-valuetext={undefined}
          className="ms-Slider-slideBox ms-Slider-showValue ms-Slider-showTransitions undefined"
          disabled={false}
          id="Slider2"
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchStart={[Function]}
          role="slider"
          type="button"
        >
          <div
            className="ms-Slider-line"
          >
            <span
              className="ms-Slider-thumb"
              style={
                Object {
                  "left": "15%",
                }
              }
            />
            <span
              className="ms-Slider-active"
              style={
                Object {
                  "width": "15%",
                }
              }
            />
            <span
              className="ms-Slider-inactive"
              style={
                Object {
                  "width": "85%",
                }
              }
            />
          </div>
        </button>
        <label
          className="ms-Label ms-Slider-value root-89"
        >
          16
        </label>
      </div>
    </div>
    <div
      className="ms-Dropdown-container"
    >
      <label
        className="ms-Label ms-Dropdown-label root-89"
        htmlFor="Dropdown3"
        id="Dropdown3-label"
        required={undefined}
      >
        Directional hint
      </label>
      <div
        aria-activedescendant="Dropdown3-option"
        aria-describedby="Dropdown3-option"
        aria-disabled={undefined}
        aria-expanded="false"
        aria-label={undefined}
        aria-live="assertive"
        aria-owns={undefined}
        className="ms-Dropdown"
        data-is-focusable={true}
        id="Dropdown3"
        onBlur={[Function]}
        onClick={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        role="listbox"
        tabIndex={0}
      >
        <span
          aria-atomic={true}
          aria-label="Bottom Left Edge"
          className="ms-Dropdown-title"
          id="Dropdown3-option"
          role="listbox"
        >
          <span>
            Bottom Left Edge
          </span>
        </span>
        <span
          className="ms-Dropdown-caretDownWrapper"
        >
          <i
            aria-hidden={true}
            className="ms-Dropdown-caretDown root-55"
            data-icon-name="ChevronDown"
            role="presentation"
          >
            
          </i>
        </span>
      </div>
    </div>
  </div>
  <div
    className="ms-CalloutExample-buttonArea"
  >
    <button
      aria-describedby={undefined}
      aria-label={undefined}
      aria-labelledby={undefined}
      aria-pressed={undefined}
      className="ms-Button ms-Button--default calloutExampleButton root-119"
      data-is-focusable={true}
      disabled={undefined}
      onClick={[Function]}
      type="button"
    >
      <div
        className="ms-Button-flexContainer flexContainer-102"
      >
        <div
          className="ms-Button-textContainer textContainer-103"
        >
          <div
            className="ms-Button-label label-120"
            id="id__4"
          >
            Show callout
          </div>
        </div>
      </div>
    </button>
  </div>
</div>
`;
