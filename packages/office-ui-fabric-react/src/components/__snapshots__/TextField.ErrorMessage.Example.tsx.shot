// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Examples renders TextField.ErrorMessage.Example.tsx correctly 1`] = `
<div
  className="docs-TextFieldErrorExample"
>
  <div
    className="ms-TextField"
  >
    <div
      className="ms-TextField-wrapper"
    >
      <label
        className="ms-Label root-89"
        htmlFor="TextField0"
      >
        TextField with a string-based validator. Hint: the length of the input string must be less than 3.
      </label>
      <div
        className="ms-TextField-fieldGroup"
      >
        <input
          aria-describedby={undefined}
          aria-invalid={false}
          aria-label={undefined}
          className="ms-TextField-field"
          id="TextField0"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onInput={[Function]}
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
  <div
    className="ms-TextField"
  >
    <div
      className="ms-TextField-wrapper"
    >
      <label
        className="ms-Label root-89"
        htmlFor="TextField2"
      >
        TextField with a Promise-based validator. Hint: the length of the input string must be less than 3.
      </label>
      <div
        className="ms-TextField-fieldGroup"
      >
        <input
          aria-describedby={undefined}
          aria-invalid={false}
          aria-label={undefined}
          className="ms-TextField-field"
          id="TextField2"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onInput={[Function]}
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
  <div
    className="ms-TextField"
  >
    <div
      className="ms-TextField-wrapper"
    >
      <label
        className="ms-Label root-89"
        htmlFor="TextField4"
      >
        TextField with a string-based validator. Hint: the length of the input string must be less than 3.
      </label>
      <div
        className="ms-TextField-fieldGroup"
      >
        <input
          aria-describedby="TextFieldDescription5"
          aria-invalid={true}
          aria-label={undefined}
          className="ms-TextField-field"
          id="TextField4"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onInput={[Function]}
          type="text"
          value="It should show an error message under this error message on render."
        />
      </div>
    </div>
    <span
      id="TextFieldDescription5"
    >
      <div
        aria-live="assertive"
      />
    </span>
  </div>
  <div
    className="ms-TextField"
  >
    <div
      className="ms-TextField-wrapper"
    >
      <label
        className="ms-Label root-89"
        htmlFor="TextField6"
      >
        TextField with a string-based validator. Hint: the length of the input string must be less than 3.
      </label>
      <div
        className="ms-TextField-fieldGroup"
      >
        <input
          aria-describedby={undefined}
          aria-invalid={false}
          aria-label={undefined}
          className="ms-TextField-field"
          id="TextField6"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onInput={[Function]}
          type="text"
          value="It will run validation only on input change and not on render."
        />
      </div>
    </div>
  </div>
  <div
    className="ms-TextField"
  >
    <div
      className="ms-TextField-wrapper"
    >
      <label
        className="ms-Label root-89"
        htmlFor="TextField8"
      >
        TextField with a Promise-based validator. Hint: the length of the input string must be less than 3.
      </label>
      <div
        className="ms-TextField-fieldGroup"
      >
        <input
          aria-describedby={undefined}
          aria-invalid={false}
          aria-label={undefined}
          className="ms-TextField-field"
          id="TextField8"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onInput={[Function]}
          type="text"
          value="It should show an error message under this error message 5 seconds after render."
        />
      </div>
    </div>
  </div>
  <div
    className="ms-TextField"
  >
    <div
      className="ms-TextField-wrapper"
    >
      <label
        className="ms-Label root-89"
        htmlFor="TextField10"
      >
        TextField has both description and error message.
      </label>
      <div
        className="ms-TextField-fieldGroup"
      >
        <input
          aria-describedby="TextFieldDescription11"
          aria-invalid={true}
          aria-label={undefined}
          className="ms-TextField-field"
          id="TextField10"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onInput={[Function]}
          type="text"
          value="It should show description and error message on render at the same time."
        />
      </div>
    </div>
    <span
      id="TextFieldDescription11"
    >
      <span
        className="ms-TextField-description"
      >
        This field has description and error message both under the input box.
      </span>
      <div
        aria-live="assertive"
      />
    </span>
  </div>
  <div
    className="ms-TextField"
  >
    <div
      className="ms-TextField-wrapper"
    >
      <label
        className="ms-Label root-89"
        htmlFor="TextField12"
      >
        TextField with a string-based validator. Hint: the length of the input string must be less than 3.
      </label>
      <div
        className="ms-TextField-fieldGroup"
      >
        <input
          aria-describedby={undefined}
          aria-invalid={false}
          aria-label={undefined}
          className="ms-TextField-field"
          id="TextField12"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onInput={[Function]}
          placeholder="Validation will start after users stop typing for 2 seconds."
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
  <div
    className="ms-TextField"
  >
    <div
      className="ms-TextField-wrapper"
    >
      <label
        className="ms-Label root-89"
        htmlFor="TextField14"
      >
        TextField that validates only on focus and blur. Hint: the length of the input string must be less than 3.
      </label>
      <div
        className="ms-TextField-fieldGroup"
      >
        <input
          aria-describedby={undefined}
          aria-invalid={false}
          aria-label={undefined}
          className="ms-TextField-field"
          id="TextField14"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onInput={[Function]}
          placeholder="Validation will start only on input focus and blur"
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
  <div
    className="ms-TextField"
  >
    <div
      className="ms-TextField-wrapper"
    >
      <label
        className="ms-Label root-89"
        htmlFor="TextField16"
      >
        TextField that validates only on blur. Hint: the length of the input string must be less than 3.
      </label>
      <div
        className="ms-TextField-fieldGroup"
      >
        <input
          aria-describedby={undefined}
          aria-invalid={false}
          aria-label={undefined}
          className="ms-TextField-field"
          id="TextField16"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onInput={[Function]}
          placeholder="Validation will start only on input blur."
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
  <div
    className="ms-TextField ms-TextField--underlined undefined"
  >
    <div
      className="ms-TextField-wrapper"
    >
      <label
        className="ms-Label root-89"
        htmlFor="TextField18"
      >
        Underlined TextField
      </label>
      <div
        className="ms-TextField-fieldGroup"
      >
        <input
          aria-describedby={undefined}
          aria-invalid={false}
          aria-label={undefined}
          className="ms-TextField-field"
          id="TextField18"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onInput={[Function]}
          type="text"
          value=""
        />
      </div>
    </div>
  </div>
  <div
    className="ms-TextField"
  >
    <div
      className="ms-TextField-wrapper"
    >
      <label
        className="ms-Label root-89"
        htmlFor="TextField20"
      >
        TextField that uses the errorMessage property to set an error state.
      </label>
      <div
        className="ms-TextField-fieldGroup"
      >
        <input
          aria-describedby="TextFieldDescription21"
          aria-invalid={false}
          aria-label={undefined}
          className="ms-TextField-field"
          id="TextField20"
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          onInput={[Function]}
          placeholder="This field always has an error."
          type="text"
          value=""
        />
      </div>
    </div>
    <span
      id="TextFieldDescription21"
    >
      <div
        aria-live="assertive"
      />
    </span>
  </div>
  <div
    className="NumberTextField"
  >
    <div
      className="ms-TextField NumberTextField-textField"
    >
      <div
        className="ms-TextField-wrapper"
      >
        <label
          className="ms-Label root-89"
          htmlFor="TextField22"
        >
          Number TextField with valid initial value
        </label>
        <div
          className="ms-TextField-fieldGroup"
        >
          <input
            aria-describedby={undefined}
            aria-invalid={false}
            aria-label={undefined}
            className="ms-TextField-field"
            id="TextField22"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onInput={[Function]}
            type="text"
            value="100"
          />
        </div>
      </div>
    </div>
    <div
      className="NumberTextField-restoreButton"
    >
      <button
        aria-describedby={undefined}
        aria-label={undefined}
        aria-labelledby={undefined}
        aria-pressed={undefined}
        className="ms-Button ms-Button--default root-119"
        data-is-focusable={true}
        disabled={undefined}
        onClick={[Function]}
        type="button"
      >
        <div
          className="ms-Button-flexContainer flexContainer-102"
        >
          <div
            className="ms-Button-textContainer textContainer-103"
          >
            <div
              className="ms-Button-label label-120"
              id="id__24"
            >
              Restore
            </div>
          </div>
        </div>
      </button>
    </div>
  </div>
  <div
    className="NumberTextField"
  >
    <div
      className="ms-TextField NumberTextField-textField"
    >
      <div
        className="ms-TextField-wrapper"
      >
        <label
          className="ms-Label root-89"
          htmlFor="TextField27"
        >
          Number TextField with invalid initial value
        </label>
        <div
          className="ms-TextField-fieldGroup"
        >
          <input
            aria-describedby="TextFieldDescription28"
            aria-invalid={true}
            aria-label={undefined}
            className="ms-TextField-field"
            id="TextField27"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onInput={[Function]}
            type="text"
            value="Not a number"
          />
        </div>
      </div>
      <span
        id="TextFieldDescription28"
      >
        <div
          aria-live="assertive"
        />
      </span>
    </div>
    <div
      className="NumberTextField-restoreButton"
    >
      <button
        aria-describedby={undefined}
        aria-label={undefined}
        aria-labelledby={undefined}
        aria-pressed={undefined}
        className="ms-Button ms-Button--default root-119"
        data-is-focusable={true}
        disabled={undefined}
        onClick={[Function]}
        type="button"
      >
        <div
          className="ms-Button-flexContainer flexContainer-102"
        >
          <div
            className="ms-Button-textContainer textContainer-103"
          >
            <div
              className="ms-Button-label label-120"
              id="id__29"
            >
              Restore
            </div>
          </div>
        </div>
      </button>
    </div>
  </div>
</div>
`;
